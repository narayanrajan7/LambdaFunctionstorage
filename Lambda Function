// Load the AWS SDK for Node.js
var AWS = require('aws-sdk');
// Set the region 
AWS.config.update({region: 'us-east-1'});
exports.handler = function(event, context, callback){

    var crypto = require('crypto'),
    algorithm = 'aes-256-ctr',
    password = 'enter here';
    
    function encrypt(text){
        var cipher = crypto.createCipher(algorithm,password);
        var crypted = cipher.update(text,'utf8','hex');
        crypted += cipher.final('hex');
        return crypted;
    }
    
    function decrypt(text){
      var decipher = crypto.createDecipher(algorithm,password);
      var dec = decipher.update(text,'hex','utf8');
      dec += decipher.final('utf8');
      return dec;
    }
    
    var userId = "'" + encrypt(event.email) + "'";
    var testUserId = encrypt(event.email);
    var email = decrypt(testUserId);
    
    var fullName = "'" + event.name + "'";
    var firstName = "'" + event.firstname + "'";
    var lastName = "'" + event.lastname + "'";
    var profilePic = "'" + event.photoUrl + "'";
    // Create the DynamoDB service object
    var ddb = new AWS.DynamoDB({apiVersion: '2012-10-08'});
    
    /*
    * CHECKS IF USER EXISTS IN DynamoDB
    */
    var userExists;

    var params = {
      Key: {
       "userId": {
         S: userId
        }, 
       "name": {
         S: fullName
        }
      }, 
      TableName: "users"
     };
    
    ddb.getItem(params, function(err, data) {
      if (data) {
          //userExists = false;
          callback(null, data);
      } else if(err){
        //userExists = true;
        callback(null, err);
      }
      else{
        //userExists = true;
        callback(null, data)
      }
    });
    
    /*
     IF NEW USER, UPDATES TO DynamoDB
    */
     if(userExists == false) {
        var params = {
            TableName: "users",
            Expected: {
              'userId': {
                Exists: false
              }
            },
            Item:{
                "userId": {
                  S: userId
                  } ,
                "name": {
                  S: fullName
                  },
                "firstName": {
                  S: firstName
                  },
                "lastName": {
                  S: lastName
                  },
                "profilePic": {
                  S: profilePic
                  },
                "friends": {
                  S: "0"
                  
                }
            }
        };
        
         Call DynamoDB to add the item to the table
        ddb.putItem(params, function(err, data) {
          if (err) {
            //callback(null, err);
          } else {
            callback(null, "User added");
          }
        });
      }
      else {
        callback(null, "User exists");
      }
      
      var ddb = new AWS.DynamoDB({apiVersion: '2012-10-08'});
      
      var id = event.id;
      var time = event.timeStamp;
      var comment = event.comment;*/
      
       var params = {
      Key: {
       "id": {
         N: '1'
        }
      }, 
      TableName: "comments"
     };
     
    ddb.getItem(params, function(err, data) {
      if (data) {
          callback(null, data.Item.comments.L[0].S);
      } else if(err){
        callback(null, err);
      }
      else{
    
      }
    });
    
   var updateParams = {
       TableName : 'comments',
    Key: {
      id : {
        N: '1'
      }
    }, 
    UpdateExpression : "SET comments[1] = :nd",
    ExpressionAttributeValues : {
      ":nd" : { S : "test2"}
    } 
    }
    
    ddb.updateItem(updateParams, function(err, data) {
       if (err) console.log(err, err.stack); // an error occurred
       else     console.log(data); 
    });

  
}
